<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>又瘦了三斤</title>
  
  
  <link href="https://blog.zhangcun.store/atom.xml" rel="self"/>
  
  <link href="https://blog.zhangcun.store/"/>
  <updated>2022-05-31T06:41:27.795Z</updated>
  <id>https://blog.zhangcun.store/</id>
  
  <author>
    <name>张存</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>企业异地组网：docker-compose 搭建 openvpn</title>
    <link href="https://blog.zhangcun.store/2022/05/31/qi-ye-yi-di-zu-wang-docker-compose-da-jian-openvpn/"/>
    <id>https://blog.zhangcun.store/2022/05/31/qi-ye-yi-di-zu-wang-docker-compose-da-jian-openvpn/</id>
    <published>2022-05-31T03:24:54.000Z</published>
    <updated>2022-05-31T06:41:27.795Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;前言
因为总公司跟分公司不在同一个地区，需要构建一个虚拟局域网把两个公司的网络组合一起，达到网络互通的目的。对比一番后，选择选择了免费开源的openvpn的方案。本文介绍如何通过docker-compose 构建openvpn</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix命令之：zabbix_get命令</title>
    <link href="https://blog.zhangcun.store/2022/05/31/zabbix-ming-ling-zhi-zabbix-get-ming-ling/"/>
    <id>https://blog.zhangcun.store/2022/05/31/zabbix-ming-ling-zhi-zabbix-get-ming-ling/</id>
    <published>2022-05-31T03:09:12.000Z</published>
    <updated>2022-05-31T03:09:42.859Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt; zabbix_get命令是在server端用来检查agent端的一个命令，在添加完主机或者触发器后，不能正常获得数据，可以用zabbix_get来检查能否采集到数据，以便判断问题症结所在。
 zabbix_get 参数说明：
 -s --host：</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker-compose部署ELK</title>
    <link href="https://blog.zhangcun.store/2022/05/31/docker-compose-bu-shu-elk-1/"/>
    <id>https://blog.zhangcun.store/2022/05/31/docker-compose-bu-shu-elk-1/</id>
    <published>2022-05-31T03:01:25.000Z</published>
    <updated>2022-05-31T03:06:44.686Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;kibana.yml

[root@topcheer config]# cat kibana.yml
server.host: &amp;quot;0.0.0.0&amp;quot;
elasticsearch.url:</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>linux中监控CPU、内存和磁盘状态的shell脚本。（centos7）</title>
    <link href="https://blog.zhangcun.store/2022/05/30/linux-zhong-jian-kong-cpu-nei-cun-he-ci-pan-zhuang-tai-de-shell-jiao-ben-centos7/"/>
    <id>https://blog.zhangcun.store/2022/05/30/linux-zhong-jian-kong-cpu-nei-cun-he-ci-pan-zhuang-tai-de-shell-jiao-ben-centos7/</id>
    <published>2022-05-30T03:33:41.000Z</published>
    <updated>2022-05-30T03:37:01.109Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;　这篇博客中所写的脚本，在实际工作中并没有什么卵用，工作中并不会用到这种脚本去监控。不过自己写一遍，可以让初学者对CPU、内存、磁盘等一些基础知识和基础命令更加了解。

1、利用vmstat工具监控CPU详细信息，然后基于/proc/stat计算CPU利用率</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>win10开启多用户同时远程登录</title>
    <link href="https://blog.zhangcun.store/2022/05/30/win10-kai-qi-duo-yong-hu-tong-shi-yuan-cheng-deng-lu/"/>
    <id>https://blog.zhangcun.store/2022/05/30/win10-kai-qi-duo-yong-hu-tong-shi-yuan-cheng-deng-lu/</id>
    <published>2022-05-30T03:24:27.000Z</published>
    <updated>2022-05-30T03:24:29.174Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker-compose 部署 jenkins</title>
    <link href="https://blog.zhangcun.store/2022/05/19/docker-compose-bu-shu-jenkins/"/>
    <id>https://blog.zhangcun.store/2022/05/19/docker-compose-bu-shu-jenkins/</id>
    <published>2022-05-19T13:14:08.000Z</published>
    <updated>2022-05-19T13:15:20.120Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;一. docker-compose.yaml
version: &amp;#39;3&amp;#39;
services:
  jenkins:
    image: &amp;#39;jenkinsci/blueocean&amp;#39;
    container_name:</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>禁止用户使用 sudo su 命令进入root 模式</title>
    <link href="https://blog.zhangcun.store/2022/05/19/jin-zhi-yong-hu-shi-yong-sudo-su-ming-ling-jin-ru-root-mo-shi/"/>
    <id>https://blog.zhangcun.store/2022/05/19/jin-zhi-yong-hu-shi-yong-sudo-su-ming-ling-jin-ru-root-mo-shi/</id>
    <published>2022-05-19T08:10:54.000Z</published>
    <updated>2022-05-19T08:11:04.814Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;1. 修改 /etc/sudoers 的权限, 用来写入文件
# chmod 777 /etc/sudoers
2. 修改sudo 可以执行的命令
vim /etc/sudoers  # 打开 sudo 控制文件
apuser ALL=(ALL:ALL)</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu远程利用邮箱客户端发送邮件</title>
    <link href="https://blog.zhangcun.store/2022/05/19/ubuntu-yuan-cheng-li-yong-you-xiang-ke-hu-duan-fa-song-you-jian/"/>
    <id>https://blog.zhangcun.store/2022/05/19/ubuntu-yuan-cheng-li-yong-you-xiang-ke-hu-duan-fa-song-you-jian/</id>
    <published>2022-05-19T08:08:38.000Z</published>
    <updated>2022-05-19T08:09:46.974Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;添加软件源并安装
部分软件库缺失这个软件，阿里云的库里面有，添加源
 sudo vim /etc/apt/sources.list # 打开源地址列表
 deb http://cz.archive.ubuntu.com/ubuntu xenial main</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>linux限制普通用户命令,sudo 限制普通用户权限(示例代码)</title>
    <link href="https://blog.zhangcun.store/2022/05/19/linux-xian-zhi-pu-tong-yong-hu-ming-ling-sudo-xian-zhi-pu-tong-yong-hu-quan-xian-shi-li-dai-ma/"/>
    <id>https://blog.zhangcun.store/2022/05/19/linux-xian-zhi-pu-tong-yong-hu-ming-ling-sudo-xian-zhi-pu-tong-yong-hu-quan-xian-shi-li-dai-ma/</id>
    <published>2022-05-19T08:07:13.000Z</published>
    <updated>2022-05-19T08:07:46.362Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;限制用户sudo所能执行的命令

linux是多用户多任务的分时操作系统,共享该系统的用户往往不只一个。

但由于root账户密码的敏感性和root账号的无限制权限, 有必要通过useradd创建一些普通用户, 只让他们拥有不完全的权限;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>vim的补充及文件输入输出管理</title>
    <link href="https://blog.zhangcun.store/2022/05/19/vim-de-bu-chong-ji-wen-jian-shu-ru-shu-chu-guan-li/"/>
    <id>https://blog.zhangcun.store/2022/05/19/vim-de-bu-chong-ji-wen-jian-shu-ru-shu-chu-guan-li/</id>
    <published>2022-05-19T08:04:08.000Z</published>
    <updated>2022-05-19T08:05:55.689Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;一、vim的功能补充
  1.可视化操作
      a、在vim中不能使用鼠标框选，若要操作某一区域，需要进入可视化模式（ctrl+v），按上|下|左|右操作即可

      b、可视化模式下批量添加字符

           </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux禁止普通用户使用某些命令</title>
    <link href="https://blog.zhangcun.store/2022/05/18/linux-jin-zhi-pu-tong-yong-hu-shi-yong-mou-xie-ming-ling/"/>
    <id>https://blog.zhangcun.store/2022/05/18/linux-jin-zhi-pu-tong-yong-hu-shi-yong-mou-xie-ming-ling/</id>
    <published>2022-05-17T16:10:10.000Z</published>
    <updated>2022-05-17T16:12:27.446Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;1.例如xiaowei这个普通用户禁止使用rm命令怎么实现。&lt;/p&gt;
&lt;p&gt;默认情况下普通用户都是有rm命令权限的，我看到这个第一也是想到了利用visudo来做，但是没有实现，且这个用户是已经存在的用户，尝试一会儿没有实现。后面又想到了setfacl这个命令，实现过程如下：</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker-compose运行elasticsearch+elastichd</title>
    <link href="https://blog.zhangcun.store/2022/05/18/docker-compose-yun-xing-elasticsearch-elastichd/"/>
    <id>https://blog.zhangcun.store/2022/05/18/docker-compose-yun-xing-elasticsearch-elastichd/</id>
    <published>2022-05-17T16:04:05.000Z</published>
    <updated>2022-05-17T16:05:09.428Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;ersion: &amp;#39;3&amp;#39;
ervices:
 elasticsearch:
   image: elasticsearch:7.5.1
   container_name: elasticsearch
   networks:
   -</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>mysqldump 导出提示Couldn&#39;t execute SELECT COLUMN_NAME...</title>
    <link href="https://blog.zhangcun.store/2022/05/18/mysqldump-dao-chu-ti-shi-couldn-t-execute-select-column-name/"/>
    <id>https://blog.zhangcun.store/2022/05/18/mysqldump-dao-chu-ti-shi-couldn-t-execute-select-column-name/</id>
    <published>2022-05-17T16:01:51.000Z</published>
    <updated>2022-05-17T16:02:07.649Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;mysqldump 导出提示Couldn’t execute SELECT COLUMN_NAME…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysqldump命令：

　　导出数据库：mysqldump -h ip -u root -p dbname &amp;gt;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用 docker 搭建 openvpn，创建、删除用户证书</title>
    <link href="https://blog.zhangcun.store/2022/05/17/shi-yong-docker-da-jian-openvpn-chuang-jian-shan-chu-yong-hu-zheng-shu/"/>
    <id>https://blog.zhangcun.store/2022/05/17/shi-yong-docker-da-jian-openvpn-chuang-jian-shan-chu-yong-hu-zheng-shu/</id>
    <published>2022-05-17T15:37:06.000Z</published>
    <updated>2022-05-17T15:43:40.761Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;我自己的配置，服务器：ubuntu16.04 + docker 17.12.0-ce；客户端：win10 + openvpn2.4.5&lt;/p&gt;
&lt;p&gt;1 在 dockerhub 上搜索 openvpn，&lt;/p&gt;
&lt;p&gt;2 在 terminal 配置环境变量，Pick a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker-compose入门示例：一键部署 Nginx+Tomcat+Mysql</title>
    <link href="https://blog.zhangcun.store/2022/05/17/docker-compose-ru-men-shi-li-yi-jian-bu-shu-nginx-tomcat-mysql/"/>
    <id>https://blog.zhangcun.store/2022/05/17/docker-compose-ru-men-shi-li-yi-jian-bu-shu-nginx-tomcat-mysql/</id>
    <published>2022-05-17T15:23:56.000Z</published>
    <updated>2022-05-17T15:27:04.060Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;整体环境配置&lt;/p&gt;
&lt;p&gt;整体环境的配置，如果一个一个 Dockerfile 去写，那么是相当麻烦的，好在 Docker 有一个名为 Docker-Compose 的工具提供，我们可以使用它一次性完成整体环境的配置： &lt;/p&gt;
&lt;p&gt;首先我们看看</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>alpine中设置时区（Dockerfile版）</title>
    <link href="https://blog.zhangcun.store/2022/05/17/alpine-zhong-she-zhi-shi-qu-dockerfile-ban/"/>
    <id>https://blog.zhangcun.store/2022/05/17/alpine-zhong-she-zhi-shi-qu-dockerfile-ban/</id>
    <published>2022-05-17T15:19:41.000Z</published>
    <updated>2022-05-17T15:20:06.181Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;FROM alpine:3.12
ENV TZ Asia/Shanghai
RUN apk -U upgrade &amp;amp;&amp;amp; apk add tzdata &amp;amp;&amp;amp; cp</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu修改pip的官方源为豆瓣源</title>
    <link href="https://blog.zhangcun.store/2022/05/17/ubuntu-xiu-gai-pip-de-guan-fang-yuan-wei-dou-ban-yuan/"/>
    <id>https://blog.zhangcun.store/2022/05/17/ubuntu-xiu-gai-pip-de-guan-fang-yuan-wei-dou-ban-yuan/</id>
    <published>2022-05-17T14:24:43.000Z</published>
    <updated>2022-05-17T14:25:13.291Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;ubuntu修改pip的官方源为豆瓣源&lt;br&gt;编辑配置文件, 如果没有就新建一份&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir ~/.pip
vim ~/.pip/pip.conf

然后编辑pip.conf，输入

[global]
index-url =</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Too many open files in system</title>
    <link href="https://blog.zhangcun.store/2022/05/17/too-many-open-files-in-system/"/>
    <id>https://blog.zhangcun.store/2022/05/17/too-many-open-files-in-system/</id>
    <published>2022-05-17T14:21:46.000Z</published>
    <updated>2022-05-17T14:22:17.434Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;如果系统报错 Too many open files in system  检查措施如下：

……1:  :   :   ulimit -n或者ulimit -a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu 18.04更换源</title>
    <link href="https://blog.zhangcun.store/2022/05/17/ubuntu-18-04-geng-huan-yuan/"/>
    <id>https://blog.zhangcun.store/2022/05/17/ubuntu-18-04-geng-huan-yuan/</id>
    <published>2022-05-17T14:19:14.000Z</published>
    <updated>2022-05-17T14:19:58.028Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;sudo cp /etc/apt/sources.list  /etc/apt/sources.list.bak      //备份&lt;/p&gt;
&lt;p&gt;sudo vim /etc/apt/sources.list     </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>删除pip安装缓存</title>
    <link href="https://blog.zhangcun.store/2022/05/17/shan-chu-pip-an-zhuang-huan-cun/"/>
    <id>https://blog.zhangcun.store/2022/05/17/shan-chu-pip-an-zhuang-huan-cun/</id>
    <published>2022-05-17T13:58:15.000Z</published>
    <updated>2022-05-17T13:58:53.761Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;指定–no-cache-dir确保安装不缓存&lt;br&gt;如果pip版本在6.0以上，可以在安装时使用–no-cache-dir参数，查看pip版本&lt;/p&gt;
&lt;p&gt;pip</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
