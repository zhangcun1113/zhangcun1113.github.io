<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>又瘦了三斤</title>
  
  
  <link href="https://blog.zhangcun.store/atom.xml" rel="self"/>
  
  <link href="https://blog.zhangcun.store/"/>
  <updated>2022-05-17T15:43:40.761Z</updated>
  <id>https://blog.zhangcun.store/</id>
  
  <author>
    <name>张存</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 docker 搭建 openvpn，创建、删除用户证书</title>
    <link href="https://blog.zhangcun.store/2022/05/17/shi-yong-docker-da-jian-openvpn-chuang-jian-shan-chu-yong-hu-zheng-shu/"/>
    <id>https://blog.zhangcun.store/2022/05/17/shi-yong-docker-da-jian-openvpn-chuang-jian-shan-chu-yong-hu-zheng-shu/</id>
    <published>2022-05-17T15:37:06.000Z</published>
    <updated>2022-05-17T15:43:40.761Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;我自己的配置，服务器：ubuntu16.04 + docker 17.12.0-ce；客户端：win10 + openvpn2.4.5&lt;/p&gt;
&lt;p&gt;1 在 dockerhub 上搜索 openvpn，&lt;/p&gt;
&lt;p&gt;2 在 terminal 配置环境变量，Pick a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker-compose入门示例：一键部署 Nginx+Tomcat+Mysql</title>
    <link href="https://blog.zhangcun.store/2022/05/17/docker-compose-ru-men-shi-li-yi-jian-bu-shu-nginx-tomcat-mysql/"/>
    <id>https://blog.zhangcun.store/2022/05/17/docker-compose-ru-men-shi-li-yi-jian-bu-shu-nginx-tomcat-mysql/</id>
    <published>2022-05-17T15:23:56.000Z</published>
    <updated>2022-05-17T15:27:04.060Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;整体环境配置&lt;/p&gt;
&lt;p&gt;整体环境的配置，如果一个一个 Dockerfile 去写，那么是相当麻烦的，好在 Docker 有一个名为 Docker-Compose 的工具提供，我们可以使用它一次性完成整体环境的配置： &lt;/p&gt;
&lt;p&gt;首先我们看看</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>alpine中设置时区（Dockerfile版）</title>
    <link href="https://blog.zhangcun.store/2022/05/17/alpine-zhong-she-zhi-shi-qu-dockerfile-ban/"/>
    <id>https://blog.zhangcun.store/2022/05/17/alpine-zhong-she-zhi-shi-qu-dockerfile-ban/</id>
    <published>2022-05-17T15:19:41.000Z</published>
    <updated>2022-05-17T15:20:06.181Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;FROM alpine:3.12
ENV TZ Asia/Shanghai
RUN apk -U upgrade &amp;amp;&amp;amp; apk add tzdata &amp;amp;&amp;amp; cp</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu修改pip的官方源为豆瓣源</title>
    <link href="https://blog.zhangcun.store/2022/05/17/ubuntu-xiu-gai-pip-de-guan-fang-yuan-wei-dou-ban-yuan/"/>
    <id>https://blog.zhangcun.store/2022/05/17/ubuntu-xiu-gai-pip-de-guan-fang-yuan-wei-dou-ban-yuan/</id>
    <published>2022-05-17T14:24:43.000Z</published>
    <updated>2022-05-17T14:25:13.291Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;ubuntu修改pip的官方源为豆瓣源&lt;br&gt;编辑配置文件, 如果没有就新建一份&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir ~/.pip
vim ~/.pip/pip.conf

然后编辑pip.conf，输入

[global]
index-url =</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Too many open files in system</title>
    <link href="https://blog.zhangcun.store/2022/05/17/too-many-open-files-in-system/"/>
    <id>https://blog.zhangcun.store/2022/05/17/too-many-open-files-in-system/</id>
    <published>2022-05-17T14:21:46.000Z</published>
    <updated>2022-05-17T14:22:17.434Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;如果系统报错 Too many open files in system  检查措施如下：

……1:  :   :   ulimit -n或者ulimit -a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu 18.04更换源</title>
    <link href="https://blog.zhangcun.store/2022/05/17/ubuntu-18-04-geng-huan-yuan/"/>
    <id>https://blog.zhangcun.store/2022/05/17/ubuntu-18-04-geng-huan-yuan/</id>
    <published>2022-05-17T14:19:14.000Z</published>
    <updated>2022-05-17T14:19:58.028Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;sudo cp /etc/apt/sources.list  /etc/apt/sources.list.bak      //备份&lt;/p&gt;
&lt;p&gt;sudo vim /etc/apt/sources.list     </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>删除pip安装缓存</title>
    <link href="https://blog.zhangcun.store/2022/05/17/shan-chu-pip-an-zhuang-huan-cun/"/>
    <id>https://blog.zhangcun.store/2022/05/17/shan-chu-pip-an-zhuang-huan-cun/</id>
    <published>2022-05-17T13:58:15.000Z</published>
    <updated>2022-05-17T13:58:53.761Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;指定–no-cache-dir确保安装不缓存&lt;br&gt;如果pip版本在6.0以上，可以在安装时使用–no-cache-dir参数，查看pip版本&lt;/p&gt;
&lt;p&gt;pip</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>报错：Zabbix数据库版本与当前需求不匹配</title>
    <link href="https://blog.zhangcun.store/2022/05/17/bao-cuo-zabbix-shu-ju-ku-ban-ben-yu-dang-qian-xu-qiu-bu-pi-pei/"/>
    <id>https://blog.zhangcun.store/2022/05/17/bao-cuo-zabbix-shu-ju-ku-ban-ben-yu-dang-qian-xu-qiu-bu-pi-pei/</id>
    <published>2022-05-17T13:54:29.000Z</published>
    <updated>2022-05-17T13:55:33.171Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;报错：The Zabbix database version does not match current requirements. Your database version: 5000000. Required version: 4000000. Please</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix docker-compose 运行配置</title>
    <link href="https://blog.zhangcun.store/2022/05/17/zabbix-docker-compose-yun-xing-pei-zhi/"/>
    <id>https://blog.zhangcun.store/2022/05/17/zabbix-docker-compose-yun-xing-pei-zhi/</id>
    <published>2022-05-17T13:17:53.000Z</published>
    <updated>2022-05-17T13:18:29.476Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;zabbix docker-compose 运行配置&lt;br&gt;网上看到一堆使用docker-compose 运行zabbix ，都不台好用，或者因为版本问题，以下是一个整理的&lt;br&gt;docker-compose</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>通过docker-compose一键部署zabbix监控平台</title>
    <link href="https://blog.zhangcun.store/2022/05/17/tong-guo-docker-compose-yi-jian-bu-shu-zabbix-jian-kong-ping-tai/"/>
    <id>https://blog.zhangcun.store/2022/05/17/tong-guo-docker-compose-yi-jian-bu-shu-zabbix-jian-kong-ping-tai/</id>
    <published>2022-05-17T13:08:45.000Z</published>
    <updated>2022-05-17T13:14:39.336Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;通过docker启动zabbix监控平台已经很方便了，下面我们可以使用一种更加方便的方式启动，那就是docker的compose功能。&lt;/p&gt;
&lt;p&gt;当然，首先我们还是得需要有一个docker的环境，至于安装方式这里就不说了。在我的博客docker分类中有写安装方式。&lt;/p</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>基于docker的elasticsearch 7.5.1 搭建</title>
    <link href="https://blog.zhangcun.store/2022/05/13/ji-yu-docker-de-elasticsearch-7-5-1-da-jian/"/>
    <id>https://blog.zhangcun.store/2022/05/13/ji-yu-docker-de-elasticsearch-7-5-1-da-jian/</id>
    <published>2022-05-13T09:36:27.000Z</published>
    <updated>2022-05-13T09:55:46.338Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Es数据库（单节点）&lt;/p&gt;
&lt;p&gt;1.1.1拉取ES docker 镜像&lt;/p&gt;
&lt;p&gt;docker  pull elasticsearch:7.5.1&lt;/p&gt;
&lt;p&gt;1.1.2创建ES绑定数据卷&lt;/p&gt;
&lt;p&gt;mkdir</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Docker容器的重启策略及docker run的--restart选项详解</title>
    <link href="https://blog.zhangcun.store/2022/05/13/docker-rong-qi-de-chong-qi-ce-lue-ji-docker-run-de-restart-xuan-xiang-xiang-jie/"/>
    <id>https://blog.zhangcun.store/2022/05/13/docker-rong-qi-de-chong-qi-ce-lue-ji-docker-run-de-restart-xuan-xiang-xiang-jie/</id>
    <published>2022-05-13T08:38:38.000Z</published>
    <updated>2022-05-13T08:45:58.467Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;1.Docker容器的重启策略&lt;/p&gt;
&lt;p&gt;Docker容器的重启策略是面向生产环境的一个启动策略，在开发过程中可以忽略该策略。&lt;/p&gt;
&lt;p&gt;Docker容器的重启都是由Docker守护进程完成的，因此与守护进程息息相关。&lt;/p&gt;
&lt;p&gt;Docker容器的重启策略如下：</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>redis怎么清除缓存</title>
    <link href="https://blog.zhangcun.store/2022/05/13/redis-zen-me-qing-chu-huan-cun/"/>
    <id>https://blog.zhangcun.store/2022/05/13/redis-zen-me-qing-chu-huan-cun/</id>
    <published>2022-05-13T08:20:23.000Z</published>
    <updated>2022-05-13T08:20:28.717Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Linux中redis清除缓存的方法&lt;/p&gt;
&lt;p&gt;1、进入目录redis下src目录。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix报错之：on host “x.x.x.x“ failed: first network error, wait for 15 seconds</title>
    <link href="https://blog.zhangcun.store/2022/05/13/zabbix-bao-cuo-zhi-on-host-gdgwfx-cj01-failed-first-network-error-wait-for-15-seconds/"/>
    <id>https://blog.zhangcun.store/2022/05/13/zabbix-bao-cuo-zhi-on-host-gdgwfx-cj01-failed-first-network-error-wait-for-15-seconds/</id>
    <published>2022-05-13T08:17:44.000Z</published>
    <updated>2022-05-13T08:18:01.032Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;问题：zabbix服务端获取监控端信息超时，日志提示如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;on host &amp;quot;x.x.x.x&amp;quot; failed: first network error, wait for 15</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix使用 zabbix监控 docker中运行的容器及docker进程</title>
    <link href="https://blog.zhangcun.store/2022/05/13/zabbix-shi-yong-zabbix-jian-kong-docker-zhong-yun-xing-de-rong-qi-ji-docker-jin-cheng/"/>
    <id>https://blog.zhangcun.store/2022/05/13/zabbix-shi-yong-zabbix-jian-kong-docker-zhong-yun-xing-de-rong-qi-ji-docker-jin-cheng/</id>
    <published>2022-05-12T16:02:25.000Z</published>
    <updated>2022-05-12T16:04:27.513Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;    1、页面中导入zabbix模版

    
    
    将这个文件通过 zabbix 页面导入；
    2、服务器中存放监控脚本
    [root@cest-3 ~]# cat</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用docker搭建frp服务器</title>
    <link href="https://blog.zhangcun.store/2022/05/09/shi-yong-docker-da-jian-frp-fu-wu-qi/"/>
    <id>https://blog.zhangcun.store/2022/05/09/shi-yong-docker-da-jian-frp-fu-wu-qi/</id>
    <published>2022-05-09T14:23:55.000Z</published>
    <updated>2022-05-09T14:24:32.606Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;把本地的开发环境映射到外网，这是我们经常会碰到的一个要求，比方说展示给别人看啦，临时测试啦。尤其在微信开发中，因为微信必须要求80端口，所以不转发的情况下，我们只能把代码部署到服务器之后才能验证测试，非常麻烦。&lt;/p&gt;
&lt;p&gt;最早的时候是花生壳，不过这家</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker 设置国内镜像源</title>
    <link href="https://blog.zhangcun.store/2022/05/09/docker-she-zhi-guo-nei-jing-xiang-yuan/"/>
    <id>https://blog.zhangcun.store/2022/05/09/docker-she-zhi-guo-nei-jing-xiang-yuan/</id>
    <published>2022-05-09T14:22:17.000Z</published>
    <updated>2022-05-09T14:22:23.751Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt; 国内加速地址&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.Docker中国区官方镜像
https://registry.docker-cn.com

2.网易
http://hub-mirror.c.163.com

3.ustc</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>lsyncd自动同步配置</title>
    <link href="https://blog.zhangcun.store/2022/05/09/lsyncd-zi-dong-tong-bu-pei-zhi/"/>
    <id>https://blog.zhangcun.store/2022/05/09/lsyncd-zi-dong-tong-bu-pei-zhi/</id>
    <published>2022-05-09T14:21:02.000Z</published>
    <updated>2022-05-09T14:21:10.056Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;因生产环境需要，需要将2.60上的数据目录，备份到2.61上；计划利用lsyncd的实时同步功能来实现备份。&lt;/p&gt;
&lt;p&gt;源：172.16.2.60  Ubuntu系统&lt;/p&gt;
&lt;p&gt;备份：172.16.2.61 </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker安装ldap+phpldapadmin</title>
    <link href="https://blog.zhangcun.store/2022/05/09/docker-an-zhuang-ldap-phpldapadmin/"/>
    <id>https://blog.zhangcun.store/2022/05/09/docker-an-zhuang-ldap-phpldapadmin/</id>
    <published>2022-05-09T14:16:31.000Z</published>
    <updated>2022-05-09T14:17:04.990Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;安装ladp之前，需要提前安装并启动docker。&lt;/p&gt;
&lt;p&gt;安装ldap&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo docker run \

-p 389:389\

-p 636:636\

--name youe_ldap\

--network</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker安装目录迁移</title>
    <link href="https://blog.zhangcun.store/2022/05/09/docker-an-zhuang-mu-lu-qian-yi/"/>
    <id>https://blog.zhangcun.store/2022/05/09/docker-an-zhuang-mu-lu-qian-yi/</id>
    <published>2022-05-09T14:10:00.000Z</published>
    <updated>2022-05-09T14:11:39.282Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在安装docker时通常是默认安装的系统盘目录/var/lib/docker，而该目录通常是比较小的，一旦镜像过多就可能出现docker无法运行的情况，这时进行docker目录的迁移就可以很好地解决问题。&lt;/p&gt;
&lt;p&gt;docker目录的迁移其实非常简单，有以下两种方法可以</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
