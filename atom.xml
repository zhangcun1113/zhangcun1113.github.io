<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>又瘦了三斤</title>
  
  
  <link href="https://blog.zhangcun.store/atom.xml" rel="self"/>
  
  <link href="https://blog.zhangcun.store/"/>
  <updated>2022-05-13T08:45:58.467Z</updated>
  <id>https://blog.zhangcun.store/</id>
  
  <author>
    <name>张存</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker容器的重启策略及docker run的--restart选项详解</title>
    <link href="https://blog.zhangcun.store/2022/05/13/docker-rong-qi-de-chong-qi-ce-lue-ji-docker-run-de-restart-xuan-xiang-xiang-jie/"/>
    <id>https://blog.zhangcun.store/2022/05/13/docker-rong-qi-de-chong-qi-ce-lue-ji-docker-run-de-restart-xuan-xiang-xiang-jie/</id>
    <published>2022-05-13T08:38:38.000Z</published>
    <updated>2022-05-13T08:45:58.467Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;1.Docker容器的重启策略&lt;/p&gt;
&lt;p&gt;Docker容器的重启策略是面向生产环境的一个启动策略，在开发过程中可以忽略该策略。&lt;/p&gt;
&lt;p&gt;Docker容器的重启都是由Docker守护进程完成的，因此与守护进程息息相关。&lt;/p&gt;
&lt;p&gt;Docker容器的重启策略如下：</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>redis怎么清除缓存</title>
    <link href="https://blog.zhangcun.store/2022/05/13/redis-zen-me-qing-chu-huan-cun/"/>
    <id>https://blog.zhangcun.store/2022/05/13/redis-zen-me-qing-chu-huan-cun/</id>
    <published>2022-05-13T08:20:23.000Z</published>
    <updated>2022-05-13T08:20:28.717Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Linux中redis清除缓存的方法&lt;/p&gt;
&lt;p&gt;1、进入目录redis下src目录。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix报错之：on host “x.x.x.x“ failed: first network error, wait for 15 seconds</title>
    <link href="https://blog.zhangcun.store/2022/05/13/zabbix-bao-cuo-zhi-on-host-gdgwfx-cj01-failed-first-network-error-wait-for-15-seconds/"/>
    <id>https://blog.zhangcun.store/2022/05/13/zabbix-bao-cuo-zhi-on-host-gdgwfx-cj01-failed-first-network-error-wait-for-15-seconds/</id>
    <published>2022-05-13T08:17:44.000Z</published>
    <updated>2022-05-13T08:18:01.032Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;问题：zabbix服务端获取监控端信息超时，日志提示如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;on host &amp;quot;x.x.x.x&amp;quot; failed: first network error, wait for 15</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix使用 zabbix监控 docker中运行的容器及docker进程</title>
    <link href="https://blog.zhangcun.store/2022/05/13/zabbix-shi-yong-zabbix-jian-kong-docker-zhong-yun-xing-de-rong-qi-ji-docker-jin-cheng/"/>
    <id>https://blog.zhangcun.store/2022/05/13/zabbix-shi-yong-zabbix-jian-kong-docker-zhong-yun-xing-de-rong-qi-ji-docker-jin-cheng/</id>
    <published>2022-05-12T16:02:25.000Z</published>
    <updated>2022-05-12T16:04:27.513Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;    1、页面中导入zabbix模版

    
    
    将这个文件通过 zabbix 页面导入；
    2、服务器中存放监控脚本
    [root@cest-3 ~]# cat</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用docker搭建frp服务器</title>
    <link href="https://blog.zhangcun.store/2022/05/09/shi-yong-docker-da-jian-frp-fu-wu-qi/"/>
    <id>https://blog.zhangcun.store/2022/05/09/shi-yong-docker-da-jian-frp-fu-wu-qi/</id>
    <published>2022-05-09T14:23:55.000Z</published>
    <updated>2022-05-09T14:24:32.606Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;把本地的开发环境映射到外网，这是我们经常会碰到的一个要求，比方说展示给别人看啦，临时测试啦。尤其在微信开发中，因为微信必须要求80端口，所以不转发的情况下，我们只能把代码部署到服务器之后才能验证测试，非常麻烦。&lt;/p&gt;
&lt;p&gt;最早的时候是花生壳，不过这家</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker 设置国内镜像源</title>
    <link href="https://blog.zhangcun.store/2022/05/09/docker-she-zhi-guo-nei-jing-xiang-yuan/"/>
    <id>https://blog.zhangcun.store/2022/05/09/docker-she-zhi-guo-nei-jing-xiang-yuan/</id>
    <published>2022-05-09T14:22:17.000Z</published>
    <updated>2022-05-09T14:22:23.751Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt; 国内加速地址&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.Docker中国区官方镜像
https://registry.docker-cn.com

2.网易
http://hub-mirror.c.163.com

3.ustc</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>lsyncd自动同步配置</title>
    <link href="https://blog.zhangcun.store/2022/05/09/lsyncd-zi-dong-tong-bu-pei-zhi/"/>
    <id>https://blog.zhangcun.store/2022/05/09/lsyncd-zi-dong-tong-bu-pei-zhi/</id>
    <published>2022-05-09T14:21:02.000Z</published>
    <updated>2022-05-09T14:21:10.056Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;因生产环境需要，需要将2.60上的数据目录，备份到2.61上；计划利用lsyncd的实时同步功能来实现备份。&lt;/p&gt;
&lt;p&gt;源：172.16.2.60  Ubuntu系统&lt;/p&gt;
&lt;p&gt;备份：172.16.2.61 </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker安装ldap+phpldapadmin</title>
    <link href="https://blog.zhangcun.store/2022/05/09/docker-an-zhuang-ldap-phpldapadmin/"/>
    <id>https://blog.zhangcun.store/2022/05/09/docker-an-zhuang-ldap-phpldapadmin/</id>
    <published>2022-05-09T14:16:31.000Z</published>
    <updated>2022-05-09T14:17:04.990Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;安装ladp之前，需要提前安装并启动docker。&lt;/p&gt;
&lt;p&gt;安装ldap&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo docker run \

-p 389:389\

-p 636:636\

--name youe_ldap\

--network</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker安装目录迁移</title>
    <link href="https://blog.zhangcun.store/2022/05/09/docker-an-zhuang-mu-lu-qian-yi/"/>
    <id>https://blog.zhangcun.store/2022/05/09/docker-an-zhuang-mu-lu-qian-yi/</id>
    <published>2022-05-09T14:10:00.000Z</published>
    <updated>2022-05-09T14:11:39.282Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在安装docker时通常是默认安装的系统盘目录/var/lib/docker，而该目录通常是比较小的，一旦镜像过多就可能出现docker无法运行的情况，这时进行docker目录的迁移就可以很好地解决问题。&lt;/p&gt;
&lt;p&gt;docker目录的迁移其实非常简单，有以下两种方法可以</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>dockerfile和构建缓存</title>
    <link href="https://blog.zhangcun.store/2022/05/09/dockerfile-he-gou-jian-huan-cun/"/>
    <id>https://blog.zhangcun.store/2022/05/09/dockerfile-he-gou-jian-huan-cun/</id>
    <published>2022-05-09T10:39:24.000Z</published>
    <updated>2022-05-09T10:41:33.175Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;镜像缓存&lt;/p&gt;
&lt;p&gt;1.镜像缓存：在构建或者下载镜像时候，当镜像层已经存在的时候，直接使用使用缓存， 不需要进行重新构建镜像，如果我们希望在构建镜像时不使用缓存，可以在 docker build 命令中加上 –no-cache 参数。如果我们改变 Dockerfile</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Docker-可视化管理工具总结-推荐使用Portainer</title>
    <link href="https://blog.zhangcun.store/2022/05/09/docker-ke-shi-hua-guan-li-gong-ju-zong-jie-tui-jian-shi-yong-portainer/"/>
    <id>https://blog.zhangcun.store/2022/05/09/docker-ke-shi-hua-guan-li-gong-ju-zong-jie-tui-jian-shi-yong-portainer/</id>
    <published>2022-05-09T09:59:36.000Z</published>
    <updated>2022-05-09T10:07:49.665Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;对于初学docker的小白，一款好的可视化工具有助于快速掌握docker基本形态和概念，下面针对docker可视化工具做些总结&lt;/p&gt;
&lt;p&gt;ui-for-docker#&lt;br&gt;UI For Docker是一个使用Docker Remote</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>frp+openvpn+docker实现内网穿透</title>
    <link href="https://blog.zhangcun.store/2022/05/09/frp-openvpn-docker-shi-xian-nei-wang-chuan-tou/"/>
    <id>https://blog.zhangcun.store/2022/05/09/frp-openvpn-docker-shi-xian-nei-wang-chuan-tou/</id>
    <published>2022-05-09T08:59:48.000Z</published>
    <updated>2022-05-09T09:00:33.082Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;公网服务器上部署frp服务端&lt;br&gt;假设我们的公网服务器的地址anywebsites.f3322.net，ubuntu</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用seccomp强化Docker和Kubernetes安全</title>
    <link href="https://blog.zhangcun.store/2022/05/09/shi-yong-seccomp-qiang-hua-docker-he-kubernetes-an-quan/"/>
    <id>https://blog.zhangcun.store/2022/05/09/shi-yong-seccomp-qiang-hua-docker-he-kubernetes-an-quan/</id>
    <published>2022-05-09T08:57:43.000Z</published>
    <updated>2022-05-09T08:57:51.308Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;使用seccomp强化Docker和Kubernetes安全&lt;br&gt;关于容器安全性存在很多误解-许多人认为容器默认情况下是安全的，不幸的是，这不是事实。有很多工具可以帮助您提高容器的安全性，从而也可以提高Docker和Kubernetes的安全性。强化它们的方法之一是应用适</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux修改文件句柄数及vm.max_map_count、stack size的大小</title>
    <link href="https://blog.zhangcun.store/2022/05/09/linux-xiu-gai-wen-jian-ju-bing-shu-ji-vm-max-map-count-stack-size-de-da-xiao/"/>
    <id>https://blog.zhangcun.store/2022/05/09/linux-xiu-gai-wen-jian-ju-bing-shu-ji-vm-max-map-count-stack-size-de-da-xiao/</id>
    <published>2022-05-09T08:50:51.000Z</published>
    <updated>2022-05-09T08:50:53.812Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;一、修改文件句柄数
1.1.查看当前大小
ulimit -a

1.2.临时修改
ulimit -n 4096



1.3.永久修改
vim</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker容器创建指定网关和网段</title>
    <link href="https://blog.zhangcun.store/2022/05/09/docker-rong-qi-chuang-jian-zhi-ding-wang-guan-he-wang-duan/"/>
    <id>https://blog.zhangcun.store/2022/05/09/docker-rong-qi-chuang-jian-zhi-ding-wang-guan-he-wang-duan/</id>
    <published>2022-05-09T08:44:43.000Z</published>
    <updated>2022-05-09T08:46:55.963Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;docker容器创建指定网关和网段&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;创建bridge时手动指定ip

$ docker network create -d bridge --gateway 172.200.0.1 --subnet 172.200.0.0/16</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>dockerfile ubuntu镜像设置时区错误解决</title>
    <link href="https://blog.zhangcun.store/2022/05/09/dockerfile-ubuntu-jing-xiang-she-zhi-shi-qu-cuo-wu-jie-jue/"/>
    <id>https://blog.zhangcun.store/2022/05/09/dockerfile-ubuntu-jing-xiang-she-zhi-shi-qu-cuo-wu-jie-jue/</id>
    <published>2022-05-09T06:07:00.000Z</published>
    <updated>2022-05-09T06:07:04.409Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;只针对ubuntu
之前打镜像时 都是直接在dockerfile 里进行设置 /etc/timezone and</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker 容器重启策略</title>
    <link href="https://blog.zhangcun.store/2022/05/09/docker-rong-qi-chong-qi-ce-lue/"/>
    <id>https://blog.zhangcun.store/2022/05/09/docker-rong-qi-chong-qi-ce-lue/</id>
    <published>2022-05-09T06:04:06.000Z</published>
    <updated>2022-05-09T06:04:11.133Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;--restart=</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Dockerfile 时区设置</title>
    <link href="https://blog.zhangcun.store/2022/05/09/dockerfile-shi-qu-she-zhi/"/>
    <id>https://blog.zhangcun.store/2022/05/09/dockerfile-shi-qu-she-zhi/</id>
    <published>2022-05-09T06:02:40.000Z</published>
    <updated>2022-05-09T06:02:42.899Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;Dockerfile 时区设置
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
RUN echo &amp;#39;Asia/Shanghai&amp;#39;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Ubuntu下安装卸载python3.8的过程</title>
    <link href="https://blog.zhangcun.store/2022/05/09/ubuntu-xia-an-zhuang-xie-zai-python3-8-de-guo-cheng/"/>
    <id>https://blog.zhangcun.store/2022/05/09/ubuntu-xia-an-zhuang-xie-zai-python3-8-de-guo-cheng/</id>
    <published>2022-05-09T06:00:26.000Z</published>
    <updated>2022-05-09T06:00:30.677Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;一、Python 3.8 安装
在 Ubuntu 16.04 中，python3 的默认版本为 3.5：


$ python3 -V
Python 3.5.2
本文以在 Ubuntu 16.04 中安装为例，方法同样适用于 Ubuntu 18.04</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>pip install --no-cache-dir ；pip install --no-cache；docker --no-cache</title>
    <link href="https://blog.zhangcun.store/2022/05/09/pip-install-no-cache-dir-pip-install-no-cache-docker-no-cache/"/>
    <id>https://blog.zhangcun.store/2022/05/09/pip-install-no-cache-dir-pip-install-no-cache-docker-no-cache/</id>
    <published>2022-05-09T05:57:07.000Z</published>
    <updated>2022-05-09T05:57:18.454Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;docker build -t testXXX .</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
