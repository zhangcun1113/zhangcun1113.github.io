<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>又瘦了三斤</title>
  
  
  <link href="https://blog.zhangcun.store/atom.xml" rel="self"/>
  
  <link href="https://blog.zhangcun.store/"/>
  <updated>2022-06-16T09:34:22.643Z</updated>
  <id>https://blog.zhangcun.store/</id>
  
  <author>
    <name>张存</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>多主机多节点docker-compose部署elasticsearch集群</title>
    <link href="https://blog.zhangcun.store/2022/06/16/duo-zhu-ji-duo-jie-dian-docker-compose-bu-shu-elasticsearch-ji-qun/"/>
    <id>https://blog.zhangcun.store/2022/06/16/duo-zhu-ji-duo-jie-dian-docker-compose-bu-shu-elasticsearch-ji-qun/</id>
    <published>2022-06-16T09:31:13.000Z</published>
    <updated>2022-06-16T09:34:22.643Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;1、创建服务文件夹路径

[root@ip-172-93-1-78 deploy]# mkdir  elasticsearch
[root@ip-172-93-1-78 deploy]# cd</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Elasticsearch OutOfMemoryError Java堆空间</title>
    <link href="https://blog.zhangcun.store/2022/06/16/elasticsearch-outofmemoryerror-java-dui-kong-jian/"/>
    <id>https://blog.zhangcun.store/2022/06/16/elasticsearch-outofmemoryerror-java-dui-kong-jian/</id>
    <published>2022-06-16T09:05:51.000Z</published>
    <updated>2022-06-16T09:06:10.136Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;我正在运行一个8核，32g RAM弹性搜索节点，5个碎片，4亿个(小)文件。 一切都运行良好，直到我运行防攻击搜索，然后碎片开始失败与： java.lang.OutOfMemoryError: Java heap space 我已经改变了堆大小：</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux修改文件句柄数及vm.max_map_count、stack size</title>
    <link href="https://blog.zhangcun.store/2022/06/16/linux-xiu-gai-wen-jian-ju-bing-shu-ji-vm-max-map-count-stack-size/"/>
    <id>https://blog.zhangcun.store/2022/06/16/linux-xiu-gai-wen-jian-ju-bing-shu-ji-vm-max-map-count-stack-size/</id>
    <published>2022-06-16T09:03:48.000Z</published>
    <updated>2022-06-16T09:04:51.240Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;一、修改文件句柄数
1.1.查看当前大小
ulimit -a


1.2.临时修改
ulimit -n 4096


1.3.永久修改
vim</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>同时查看所有docker容器的日志</title>
    <link href="https://blog.zhangcun.store/2022/06/16/tong-shi-cha-kan-suo-you-docker-rong-qi-de-ri-zhi/"/>
    <id>https://blog.zhangcun.store/2022/06/16/tong-shi-cha-kan-suo-you-docker-rong-qi-de-ri-zhi/</id>
    <published>2022-06-16T09:00:42.000Z</published>
    <updated>2022-06-16T12:30:15.555Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;我目前使用docker作为后端，当我第一次用

启动时
docker-compose</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>我要自学网</title>
    <link href="https://blog.zhangcun.store/2022/06/16/wo-yao-zi-xue-wang/"/>
    <id>https://blog.zhangcun.store/2022/06/16/wo-yao-zi-xue-wang/</id>
    <published>2022-06-16T08:56:00.000Z</published>
    <updated>2022-06-16T08:56:01.803Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ps查看完整程序执行路径</title>
    <link href="https://blog.zhangcun.store/2022/06/16/ps-cha-kan-wan-zheng-cheng-xu-zhi-xing-lu-jing/"/>
    <id>https://blog.zhangcun.store/2022/06/16/ps-cha-kan-wan-zheng-cheng-xu-zhi-xing-lu-jing/</id>
    <published>2022-06-16T08:52:57.000Z</published>
    <updated>2022-06-16T08:53:56.688Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在linux下查看进程大家都会想到用 &lt;code&gt;ps -ef|grep ***&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可是看到的不是全路径，怎么看全路径呢？&lt;/p&gt;
&lt;p&gt;每个进程启动之后在 /proc下面有一个于pid对应的路径&lt;/p&gt;
&lt;p&gt;例如：ps -ef|grep</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubantu批量下载依赖包+apt命令list</title>
    <link href="https://blog.zhangcun.store/2022/06/16/ubantu-pi-liang-xia-zai-yi-lai-bao-apt-ming-ling-list/"/>
    <id>https://blog.zhangcun.store/2022/06/16/ubantu-pi-liang-xia-zai-yi-lai-bao-apt-ming-ling-list/</id>
    <published>2022-06-16T08:49:43.000Z</published>
    <updated>2022-06-16T08:50:11.003Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;apt install aptitude

aptitude --download-only install docker.io

默认下载地址

/var/cache/apt/archives/

 

sudo apt-get install</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>HTTP 499 状态码 nginx下 499错误</title>
    <link href="https://blog.zhangcun.store/2022/06/16/http-499-zhuang-tai-ma-nginx-xia-499-cuo-wu/"/>
    <id>https://blog.zhangcun.store/2022/06/16/http-499-zhuang-tai-ma-nginx-xia-499-cuo-wu/</id>
    <published>2022-06-16T08:45:26.000Z</published>
    <updated>2022-06-16T08:47:58.798Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;日志记录中HTTP状态码出现499错误有多种情况，我遇到的一种情况是nginx反代到一个永远打不开的后端，就这样了，日志状态记录是499、发送字节数是0。

老是有用户反映网站系统时好时坏，因为线上的产品很长时间没有修改，所以前端程序的问题基本上可以排除，于</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>搬瓦工搭建 ShadowSocks 翻墙（VPN）- 更换密码</title>
    <link href="https://blog.zhangcun.store/2022/06/16/ban-wa-gong-da-jian-shadowsocks-fan-qiang-vpn-geng-huan-mi-ma/"/>
    <id>https://blog.zhangcun.store/2022/06/16/ban-wa-gong-da-jian-shadowsocks-fan-qiang-vpn-geng-huan-mi-ma/</id>
    <published>2022-06-16T08:42:56.000Z</published>
    <updated>2022-06-16T08:43:10.730Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在 搬瓦工搭建 ShadowSocks 翻墙（VPN） 一文中的 “三、安装 SSR 脚本” 步骤结束后的打印信息：&lt;/p&gt;
&lt;p&gt;INFO: loading config from</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Slurm 20.02.3 集群添加gpu节点</title>
    <link href="https://blog.zhangcun.store/2022/06/16/slurm-20-02-3-ji-qun-tian-jia-gpu-jie-dian/"/>
    <id>https://blog.zhangcun.store/2022/06/16/slurm-20-02-3-ji-qun-tian-jia-gpu-jie-dian/</id>
    <published>2022-06-16T08:39:08.000Z</published>
    <updated>2022-06-16T08:39:31.712Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;为slurm集群增加GPU节点

1</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>slurm集群安装</title>
    <link href="https://blog.zhangcun.store/2022/06/16/slurm-ji-qun-an-zhuang/"/>
    <id>https://blog.zhangcun.store/2022/06/16/slurm-ji-qun-an-zhuang/</id>
    <published>2022-06-16T08:32:02.000Z</published>
    <updated>2022-06-16T08:33:51.257Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;环境：三台物理机，os均为ubuntu-18-04 LTS，hostname分别为tian-609-06、tian-609-07、tian-609-08。其中tian-609-06作为控制节点和计算节点，其他节点作为计算节点。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker部署skywalking并接入java服务</title>
    <link href="https://blog.zhangcun.store/2022/06/16/docker-bu-shu-skywalking-bing-jie-ru-java-fu-wu/"/>
    <id>https://blog.zhangcun.store/2022/06/16/docker-bu-shu-skywalking-bing-jie-ru-java-fu-wu/</id>
    <published>2022-06-16T07:24:20.000Z</published>
    <updated>2022-06-16T07:47:57.339Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;项目结构&lt;/p&gt;
&lt;p&gt;制作docker-compose.yml并在控制台输入命令：docker-compose up -d</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix-get安装使用</title>
    <link href="https://blog.zhangcun.store/2022/06/15/zabbix-get-an-zhuang-shi-yong/"/>
    <id>https://blog.zhangcun.store/2022/06/15/zabbix-get-an-zhuang-shi-yong/</id>
    <published>2022-06-15T10:21:52.000Z</published>
    <updated>2022-06-15T10:24:08.196Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;安装
一般在zabbix-server上安装，如果在其他机器上安装的话可能会无法访问agent

rpm -ivh</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Nginx：配置静态资源304缓存</title>
    <link href="https://blog.zhangcun.store/2022/06/15/nginx-pei-zhi-jing-tai-zi-yuan-304-huan-cun/"/>
    <id>https://blog.zhangcun.store/2022/06/15/nginx-pei-zhi-jing-tai-zi-yuan-304-huan-cun/</id>
    <published>2022-06-15T09:18:07.000Z</published>
    <updated>2022-06-15T09:18:36.033Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;location ~ \.(jpg|png|jpeg|gif)$  &amp;#123;

        expires 30d;

        root   /data/www/wizzer.cn/;

&amp;#125;

 

location ~</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix 报错整理</title>
    <link href="https://blog.zhangcun.store/2022/06/15/zabbix-bao-cuo-zheng-li/"/>
    <id>https://blog.zhangcun.store/2022/06/15/zabbix-bao-cuo-zheng-li/</id>
    <published>2022-06-15T09:11:58.000Z</published>
    <updated>2022-06-15T09:12:29.688Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt; 1.first network error, wait for 15 seconds
zabbix-server日志中：

Zabbix agent item &amp;quot;ITERM NAME&amp;quot; on host</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>NVIDIA驱动失效简单解决方案：NVIDIA-SMI has failed because it couldn‘t communicate with the NVIDIA driver.</title>
    <link href="https://blog.zhangcun.store/2022/06/15/nvidia-qu-dong-shi-xiao-jian-dan-jie-jue-fang-an-nvidia-smi-has-failed-because-it-couldn-t-communicate-with-the-nvidia-driver/"/>
    <id>https://blog.zhangcun.store/2022/06/15/nvidia-qu-dong-shi-xiao-jian-dan-jie-jue-fang-an-nvidia-smi-has-failed-because-it-couldn-t-communicate-with-the-nvidia-driver/</id>
    <published>2022-06-15T09:06:17.000Z</published>
    <updated>2022-06-15T09:09:59.334Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;前言：</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CentOS7使用Yum命令安装中文语言包</title>
    <link href="https://blog.zhangcun.store/2022/06/15/centos7-shi-yong-yum-ming-ling-an-zhuang-zhong-wen-yu-yan-bao/"/>
    <id>https://blog.zhangcun.store/2022/06/15/centos7-shi-yong-yum-ming-ling-an-zhuang-zhong-wen-yu-yan-bao/</id>
    <published>2022-06-15T08:56:57.000Z</published>
    <updated>2022-06-15T08:57:49.137Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;检查已安装的语言包&lt;br&gt;查看系统是否有安装中文语言包 （列出所有可用的公共语言环境的名称，包含有zh_CN）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# locale -a |grep</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>企业异地组网：docker-compose 搭建 openvpn</title>
    <link href="https://blog.zhangcun.store/2022/05/31/qi-ye-yi-di-zu-wang-docker-compose-da-jian-openvpn/"/>
    <id>https://blog.zhangcun.store/2022/05/31/qi-ye-yi-di-zu-wang-docker-compose-da-jian-openvpn/</id>
    <published>2022-05-31T03:24:54.000Z</published>
    <updated>2022-05-31T06:41:27.795Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;前言
因为总公司跟分公司不在同一个地区，需要构建一个虚拟局域网把两个公司的网络组合一起，达到网络互通的目的。对比一番后，选择选择了免费开源的openvpn的方案。本文介绍如何通过docker-compose 构建openvpn</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>zabbix命令之：zabbix_get命令</title>
    <link href="https://blog.zhangcun.store/2022/05/31/zabbix-ming-ling-zhi-zabbix-get-ming-ling/"/>
    <id>https://blog.zhangcun.store/2022/05/31/zabbix-ming-ling-zhi-zabbix-get-ming-ling/</id>
    <published>2022-05-31T03:09:12.000Z</published>
    <updated>2022-05-31T03:09:42.859Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt; zabbix_get命令是在server端用来检查agent端的一个命令，在添加完主机或者触发器后，不能正常获得数据，可以用zabbix_get来检查能否采集到数据，以便判断问题症结所在。
 zabbix_get 参数说明：
 -s --host：</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker-compose部署ELK</title>
    <link href="https://blog.zhangcun.store/2022/05/31/docker-compose-bu-shu-elk-1/"/>
    <id>https://blog.zhangcun.store/2022/05/31/docker-compose-bu-shu-elk-1/</id>
    <published>2022-05-31T03:01:25.000Z</published>
    <updated>2022-05-31T03:06:44.686Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;kibana.yml

[root@topcheer config]# cat kibana.yml
server.host: &amp;quot;0.0.0.0&amp;quot;
elasticsearch.url:</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
