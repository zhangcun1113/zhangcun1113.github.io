<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>又瘦了三斤</title>
  
  
  <link href="https://blog.zhangcun.store/atom.xml" rel="self"/>
  
  <link href="https://blog.zhangcun.store/"/>
  <updated>2022-06-17T09:00:07.327Z</updated>
  <id>https://blog.zhangcun.store/</id>
  
  <author>
    <name>张存</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>crontab每周一执行一次</title>
    <link href="https://blog.zhangcun.store/2022/06/17/crontab-mei-zhou-yi-zhi-xing-yi-ci/"/>
    <id>https://blog.zhangcun.store/2022/06/17/crontab-mei-zhou-yi-zhi-xing-yi-ci/</id>
    <published>2022-06-17T08:11:19.000Z</published>
    <updated>2022-06-17T09:00:07.327Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;linux定时执行任务命令是我们在日常工作中经常用的，一般情况下，我们都是通过linux的crontab软件来实现，crontab是定时来执行一个命令或者一个脚本;但是如果你临时只执行一次命令的话，那么我们也可以采用at命令，同时可以实现我们的目标。&lt;/p&gt;
&lt;p&gt;先从cr</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Nginx 改变错误日志打印级别</title>
    <link href="https://blog.zhangcun.store/2022/06/17/nginx-gai-bian-cuo-wu-ri-zhi-da-yin-ji-bie/"/>
    <id>https://blog.zhangcun.store/2022/06/17/nginx-gai-bian-cuo-wu-ri-zhi-da-yin-ji-bie/</id>
    <published>2022-06-17T08:06:36.000Z</published>
    <updated>2022-06-17T08:07:05.811Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Nginx 改变错误日志打印级别&lt;/p&gt;
&lt;p&gt;user  root;&lt;br&gt;worker_processes  2;&lt;/p&gt;
&lt;p&gt;worker_rlimit_nofile 10240;&lt;br&gt;error_log logs/nginx_error.log </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 18.04 编译安装 Python2.7.17</title>
    <link href="https://blog.zhangcun.store/2022/06/17/ubuntu-18-04-bian-yi-an-zhuang-python2-7-17/"/>
    <id>https://blog.zhangcun.store/2022/06/17/ubuntu-18-04-bian-yi-an-zhuang-python2-7-17/</id>
    <published>2022-06-17T08:01:52.000Z</published>
    <updated>2022-06-17T08:01:55.001Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;1、安装依赖&lt;/p&gt;
&lt;p&gt;sudo apt-get install build-essential checkinstall&lt;/p&gt;
&lt;p&gt;sudo apt-get install libreadline-gplv2-dev libncursesw5-dev</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux上如何查看物理CPU个数，核数，线程数</title>
    <link href="https://blog.zhangcun.store/2022/06/17/linux-shang-ru-he-cha-kan-wu-li-cpu-ge-shu-he-shu-xian-cheng-shu/"/>
    <id>https://blog.zhangcun.store/2022/06/17/linux-shang-ru-he-cha-kan-wu-li-cpu-ge-shu-he-shu-xian-cheng-shu/</id>
    <published>2022-06-17T07:42:43.000Z</published>
    <updated>2022-06-17T07:51:39.657Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;  首先，看看什么是超线程概念
  
  超线程技术就是利用特殊的硬件指令，把两个逻辑内核模拟成两个物理芯片，让单个处理器都能使用线程级并行计算，进而兼容多线程操作系统和软件，减少了CPU的闲置时间，提高的CPU的运行效率。
 </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux设置UTC时区</title>
    <link href="https://blog.zhangcun.store/2022/06/17/linux-she-zhi-utc-shi-qu/"/>
    <id>https://blog.zhangcun.store/2022/06/17/linux-she-zhi-utc-shi-qu/</id>
    <published>2022-06-17T07:35:24.000Z</published>
    <updated>2022-06-17T07:35:47.865Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;设置UTC时区命令

ln -sf /usr/share/zoneinfo/UTC /etc/localtime
 

具体案例：

执行前
[root@HOST etc]#cd /etc
[root@HOST etc]# ll | grep</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Nginx下同域部署多个Vue项目（history路由模式），报404、500错误</title>
    <link href="https://blog.zhangcun.store/2022/06/17/nginx-xia-tong-yu-bu-shu-duo-ge-vue-xiang-mu-history-lu-you-mo-shi-bao-404-500-cuo-wu/"/>
    <id>https://blog.zhangcun.store/2022/06/17/nginx-xia-tong-yu-bu-shu-duo-ge-vue-xiang-mu-history-lu-you-mo-shi-bao-404-500-cuo-wu/</id>
    <published>2022-06-17T07:26:46.000Z</published>
    <updated>2022-06-17T07:29:36.093Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;一、环境
系统: windows
nginx: 1.20.2
nodejs: v10.24.0
npm: v6.14.11
@vue/cli:</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>apt查看安装包可用版本号</title>
    <link href="https://blog.zhangcun.store/2022/06/17/apt-cha-kan-an-zhuang-bao-ke-yong-ban-ben-hao/"/>
    <id>https://blog.zhangcun.store/2022/06/17/apt-cha-kan-an-zhuang-bao-ke-yong-ban-ben-hao/</id>
    <published>2022-06-17T06:24:50.000Z</published>
    <updated>2022-06-17T06:25:22.390Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;例如要显示curl可安装的版本号：&lt;/p&gt;
&lt;p&gt;sudo apt-cache madison curl&lt;/p&gt;
&lt;p&gt;如果想看apt能安装哪些跟curl关键词相关的软件，运行以下命令，&lt;/p&gt;
&lt;p&gt;sudo apt-cache search</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>linux tar的排除,Tar命令排除指定目录</title>
    <link href="https://blog.zhangcun.store/2022/06/17/linux-tar-de-pai-chu-tar-ming-ling-pai-chu-zhi-ding-mu-lu/"/>
    <id>https://blog.zhangcun.store/2022/06/17/linux-tar-de-pai-chu-tar-ming-ling-pai-chu-zhi-ding-mu-lu/</id>
    <published>2022-06-17T06:21:50.000Z</published>
    <updated>2022-06-17T06:22:16.399Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;Tar命令多用于备份，基本用法大家应该都知道一些，那么如何使用tar命令排除指定目录或指定文件的参数你知道吗?

举例：

# ls 123

chinastor1  chinastor2  chinastor3  chinastor4  test1 </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>多主机多节点docker-compose部署elasticsearch集群</title>
    <link href="https://blog.zhangcun.store/2022/06/16/duo-zhu-ji-duo-jie-dian-docker-compose-bu-shu-elasticsearch-ji-qun/"/>
    <id>https://blog.zhangcun.store/2022/06/16/duo-zhu-ji-duo-jie-dian-docker-compose-bu-shu-elasticsearch-ji-qun/</id>
    <published>2022-06-16T09:31:13.000Z</published>
    <updated>2022-06-16T09:34:22.643Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;1、创建服务文件夹路径

[root@ip-172-93-1-78 deploy]# mkdir  elasticsearch
[root@ip-172-93-1-78 deploy]# cd</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Elasticsearch OutOfMemoryError Java堆空间</title>
    <link href="https://blog.zhangcun.store/2022/06/16/elasticsearch-outofmemoryerror-java-dui-kong-jian/"/>
    <id>https://blog.zhangcun.store/2022/06/16/elasticsearch-outofmemoryerror-java-dui-kong-jian/</id>
    <published>2022-06-16T09:05:51.000Z</published>
    <updated>2022-06-16T09:06:10.136Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;我正在运行一个8核，32g RAM弹性搜索节点，5个碎片，4亿个(小)文件。 一切都运行良好，直到我运行防攻击搜索，然后碎片开始失败与： java.lang.OutOfMemoryError: Java heap space 我已经改变了堆大小：</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux修改文件句柄数及vm.max_map_count、stack size</title>
    <link href="https://blog.zhangcun.store/2022/06/16/linux-xiu-gai-wen-jian-ju-bing-shu-ji-vm-max-map-count-stack-size/"/>
    <id>https://blog.zhangcun.store/2022/06/16/linux-xiu-gai-wen-jian-ju-bing-shu-ji-vm-max-map-count-stack-size/</id>
    <published>2022-06-16T09:03:48.000Z</published>
    <updated>2022-06-16T09:04:51.240Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;一、修改文件句柄数
1.1.查看当前大小
ulimit -a


1.2.临时修改
ulimit -n 4096


1.3.永久修改
vim</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>同时查看所有docker容器的日志</title>
    <link href="https://blog.zhangcun.store/2022/06/16/tong-shi-cha-kan-suo-you-docker-rong-qi-de-ri-zhi/"/>
    <id>https://blog.zhangcun.store/2022/06/16/tong-shi-cha-kan-suo-you-docker-rong-qi-de-ri-zhi/</id>
    <published>2022-06-16T09:00:42.000Z</published>
    <updated>2022-06-16T12:30:15.555Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;我目前使用docker作为后端，当我第一次用

启动时
docker-compose</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>我要自学网</title>
    <link href="https://blog.zhangcun.store/2022/06/16/wo-yao-zi-xue-wang/"/>
    <id>https://blog.zhangcun.store/2022/06/16/wo-yao-zi-xue-wang/</id>
    <published>2022-06-16T08:56:00.000Z</published>
    <updated>2022-06-16T08:56:01.803Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ps查看完整程序执行路径</title>
    <link href="https://blog.zhangcun.store/2022/06/16/ps-cha-kan-wan-zheng-cheng-xu-zhi-xing-lu-jing/"/>
    <id>https://blog.zhangcun.store/2022/06/16/ps-cha-kan-wan-zheng-cheng-xu-zhi-xing-lu-jing/</id>
    <published>2022-06-16T08:52:57.000Z</published>
    <updated>2022-06-16T08:53:56.688Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在linux下查看进程大家都会想到用 &lt;code&gt;ps -ef|grep ***&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可是看到的不是全路径，怎么看全路径呢？&lt;/p&gt;
&lt;p&gt;每个进程启动之后在 /proc下面有一个于pid对应的路径&lt;/p&gt;
&lt;p&gt;例如：ps -ef|grep</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubantu批量下载依赖包+apt命令list</title>
    <link href="https://blog.zhangcun.store/2022/06/16/ubantu-pi-liang-xia-zai-yi-lai-bao-apt-ming-ling-list/"/>
    <id>https://blog.zhangcun.store/2022/06/16/ubantu-pi-liang-xia-zai-yi-lai-bao-apt-ming-ling-list/</id>
    <published>2022-06-16T08:49:43.000Z</published>
    <updated>2022-06-16T08:50:11.003Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;apt install aptitude

aptitude --download-only install docker.io

默认下载地址

/var/cache/apt/archives/

 

sudo apt-get install</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>HTTP 499 状态码 nginx下 499错误</title>
    <link href="https://blog.zhangcun.store/2022/06/16/http-499-zhuang-tai-ma-nginx-xia-499-cuo-wu/"/>
    <id>https://blog.zhangcun.store/2022/06/16/http-499-zhuang-tai-ma-nginx-xia-499-cuo-wu/</id>
    <published>2022-06-16T08:45:26.000Z</published>
    <updated>2022-06-16T08:47:58.798Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;日志记录中HTTP状态码出现499错误有多种情况，我遇到的一种情况是nginx反代到一个永远打不开的后端，就这样了，日志状态记录是499、发送字节数是0。

老是有用户反映网站系统时好时坏，因为线上的产品很长时间没有修改，所以前端程序的问题基本上可以排除，于</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>搬瓦工搭建 ShadowSocks 翻墙（VPN）- 更换密码</title>
    <link href="https://blog.zhangcun.store/2022/06/16/ban-wa-gong-da-jian-shadowsocks-fan-qiang-vpn-geng-huan-mi-ma/"/>
    <id>https://blog.zhangcun.store/2022/06/16/ban-wa-gong-da-jian-shadowsocks-fan-qiang-vpn-geng-huan-mi-ma/</id>
    <published>2022-06-16T08:42:56.000Z</published>
    <updated>2022-06-16T08:43:10.730Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在 搬瓦工搭建 ShadowSocks 翻墙（VPN） 一文中的 “三、安装 SSR 脚本” 步骤结束后的打印信息：&lt;/p&gt;
&lt;p&gt;INFO: loading config from</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Slurm 20.02.3 集群添加gpu节点</title>
    <link href="https://blog.zhangcun.store/2022/06/16/slurm-20-02-3-ji-qun-tian-jia-gpu-jie-dian/"/>
    <id>https://blog.zhangcun.store/2022/06/16/slurm-20-02-3-ji-qun-tian-jia-gpu-jie-dian/</id>
    <published>2022-06-16T08:39:08.000Z</published>
    <updated>2022-06-16T08:39:31.712Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;pre&gt;&lt;code&gt;为slurm集群增加GPU节点

1</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>slurm集群安装</title>
    <link href="https://blog.zhangcun.store/2022/06/16/slurm-ji-qun-an-zhuang/"/>
    <id>https://blog.zhangcun.store/2022/06/16/slurm-ji-qun-an-zhuang/</id>
    <published>2022-06-16T08:32:02.000Z</published>
    <updated>2022-06-16T08:33:51.257Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;环境：三台物理机，os均为ubuntu-18-04 LTS，hostname分别为tian-609-06、tian-609-07、tian-609-08。其中tian-609-06作为控制节点和计算节点，其他节点作为计算节点。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    </summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker部署skywalking并接入java服务</title>
    <link href="https://blog.zhangcun.store/2022/06/16/docker-bu-shu-skywalking-bing-jie-ru-java-fu-wu/"/>
    <id>https://blog.zhangcun.store/2022/06/16/docker-bu-shu-skywalking-bing-jie-ru-java-fu-wu/</id>
    <published>2022-06-16T07:24:20.000Z</published>
    <updated>2022-06-16T07:47:57.339Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;项目结构&lt;/p&gt;
&lt;p&gt;制作docker-compose.yml并在控制台输入命令：docker-compose up -d</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
